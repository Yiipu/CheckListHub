{
  "id": 39,
  "header": "checklist-model",
  "topicList": [
    "Why this is needed?",
    "Live demo",
    "Installation",
    "Usage",
    "Examples",
    "How to get support",
    "Development",
    "License"
  ],
  "itemGroups": [
    {
      "topic": "Why this is needed?",
      "items": [
        {
          "title": "<p>In Angular one checkbox <code>&lt;input type=\"checkbox\" ng-model=\"...\"&gt;</code> is linked\nwith one model.<br/>\nBut in practice we usually want one model to store array of checked values\nfrom several checkboxes.<br/>\n<strong>Checklist-model</strong> solves that task without additional code in controller.   </p>"
        }
      ]
    },
    {
      "topic": "Live demo",
      "items": [
        {
          "title": "<p>http://vitalets.github.io/checklist-model</p>"
        }
      ]
    },
    {
      "topic": "Installation",
      "items": [
        {
          "title": "<blockquote>\n<p>Note: since version <code>1.0.0</code> you <em>must</em> install the <code>angular</code> library yourself as it is now a <a href=\"https://nodejs.org/en/blog/npm/peer-dependencies/\"><code>peerDependency</code></a></p>\n</blockquote><ol>\n<li>Download package:"
        },
        {
          "title": "From npm <code>npm install checklist-model</code>"
        },
        {
          "title": "From bower <code>bower install checklist-model</code>"
        },
        {
          "title": "From <a href=\"https://github.com/vitalets/checklist-model/releases\">latest release</a></li>\n</ul>"
        },
        {
          "title": "Include script to the HTML:\n    <code>html\n    &lt;script src='checklist-model.js'&gt;&lt;/script&gt;</code>"
        },
        {
          "title": "Add to app dependencies:\n    <code>js\n    var app = angular.module(\"app\", [\"checklist-model\"]);</code></li>\n</ol>"
        }
      ]
    },
    {
      "topic": "Usage",
      "items": [
        {
          "title": "<p>You should play with attributes of <code>&lt;input&gt;</code> tag:</p><p>| Attribute                 | Mandatory | Description                                   |\n| :-----------------------: | :-------: | --------------------------------------------- |\n| <code>checklist-model</code>         | Yes       | Use instead of <code>ng-model</code>                     |\n| <code>checklist-value</code>         | No        | What should be picked as array item           |\n| <code>value</code>                   | No        | What should be picked as item, but unlike <code>checklist-value</code>, this does not evaluate as an angular expression, but rather a static value |\n| <code>ng-model</code>                | No        | Every checkbok will span a new scope and define a variable named <code>checked</code> to hold its state. You can modify this name by using this attribute. |\n| <code>checklist-comparator</code>    | No   | A custom comparator. If it starts with dot(<code>.</code>) then it will be an expression applied to the array item. Otherwise it should evaluate to a function as an angular expression. The function return true if the first two arguments are equal and false otherwise. |\n| <code>checklist-before-change</code> | No       | An angular expression evaluated each time before the <code>checklist-model</code> has changed. If it evaluates to 'false' then the model will not change anymore. |\n| <code>checklist-change</code>        | No       | An angular expression evaluated each time the <code>checklist-model</code> has changed. |</p>"
        },
        {
          "title": "If you modify directly the value of the <code>checklist-model</code>, it is possible that the UI won't be updated. This is because this directive looks for the model in the parent, not in the current scope. Instead of doing <code>checklistModelList = []</code> you should do <code>checklistModelList.splice(0, checklistModelList.length)</code> or wrap it in another object. Consequently, instead of doing <code>checklistModelList = angular.copy(allValues)</code> you should do <code>checklistModelList.push.apply(checklistModelList, allValues)</code>. The idea is to use the same array and not replace it with a new one."
        },
        {
          "title": "If you're using <code>track by</code> you must specify the same thing for <code>checklist-value</code> too. See <a href=\"https://github.com/vitalets/checklist-model/issues/46\">#46</a>."
        },
        {
          "title": "If you're also using <code>ngModel</code>, please keep in mind that the state of the checkbok is initialized with the value from <code>checklistModel</code>, not with the one from <code>ngModel</code>. Afterwards the two will be kept in sync, but initially, these two can be conflicting, so only <code>checklistModel</code> is used. See the entire discussion at <a href=\"https://github.com/vitalets/checklist-model/issues/104\">#104</a>."
        }
      ]
    },
    {
      "topic": "Examples",
      "items": [
        {
          "title": "JsFiddle basic example (use this to report any issue): http://jsfiddle.net/beradrian/fjoLy5sq/"
        },
        {
          "title": "JSFiddle required example: http://jsfiddle.net/beradrian/7wt9q1ev/"
        },
        {
          "title": "Plunkr example: http://plnkr.co/edit/0UrMwtiNQxJJbVWnYgSt?p=preview"
        },
        {
          "title": "Plunkr example for <a href=\"http://plnkr.co/edit/QPLk98pCljp8dFtptSYz?p=preview\">tree list</a>"
        }
      ]
    },
    {
      "topic": "How to get support",
      "items": [
        {
          "title": "Ask a question on StackOverflow and tag it with <a href=\"http://stackoverflow.com/questions/tagged/checklist-model\">checklist-model</a>."
        },
        {
          "title": "<a href=\"https://github.com/vitalets/checklist-model/issues/new\">Fill in</a> an issue.<p>Please keep in mind to also add a Plunkr or JSFiddle example. This will greatly help us in assisting you and you can use one of the existing examples and fork it.</p>"
        }
      ]
    },
    {
      "topic": "Development",
      "items": [
        {
          "topic": "How to run tests",
          "items": [
            {
              "title": "<ol>\n<li>Generate live demo <em>index.html</em> via <code>grunt jade</code>"
            },
            {
              "title": "Run local http server <code>grunt server</code>"
            },
            {
              "title": "Open in browser http://localhost:8000 to check that demo is accessible"
            },
            {
              "title": "Open in browser http://localhost:8000/test and wait until all tests pass</li>\n</ol>"
            }
          ]
        },
        {
          "topic": "How to add a new test case",
          "items": [
            {
              "title": "<ol>\n<li>Create a new folder under <code>docs/blocks</code> named <code>your-test</code>."
            },
            {
              "title": "Create under that folder <code>ctrl.js</code> to describe the test Angular controller, <code>view.html</code> to describe the view part in HTML and <code>test.js</code> for the Angular scenario test. You can use an existing test as an example."
            },
            {
              "title": "Add a line like <code>- items.push({id: 'your-test', text: 'Your test, ctrlName: 'CtrlTestName', testValue: 'selectedItems'})</code> to <code>docs/index.jade</code>"
            },
            {
              "title": "Add a line like <code>&lt;script src=\"../docs/blocks/your-test/test.js\"&gt;&lt;/script&gt;</code> to <code>test\\index.html</code>"
            },
            {
              "title": "Run <code>grunt jade</code> to generate <code>index.html</code> from <code>docs/index.jade</code>"
            },
            {
              "title": "Run <code>grunt server</code>"
            },
            {
              "title": "Access <code>http://localhost:8000</code> for samples and <code>http://localhost:8000/test</code> for running the tests.</li>\n</ol>"
            }
          ]
        },
        {
          "topic": "How to make a new release",
          "items": [
            {
              "title": "<ol>\n<li>Change the version number in <code>package.json</code>, <code>bower.json</code> and <code>checklist-model.nuspec</code> (if not already changed - check the version number against the latest release in Github)"
            },
            {
              "title": "Create a new <a href=\"https://github.com/vitalets/checklist-model/releases\">release</a> in github with the same name for tag and title as the version number (e.g. <code>1.0.0</code>). Do not forget to include the changelog in the release description."
            },
            {
              "title": "Run <code>npm publish</code> to publish the new version to npm</li>\n</ol>"
            }
          ]
        }
      ]
    },
    {
      "topic": "License",
      "items": [
        {
          "title": "<p>MIT</p>"
        }
      ]
    }
  ],
  "sourceUrl": "https://example.com"
}