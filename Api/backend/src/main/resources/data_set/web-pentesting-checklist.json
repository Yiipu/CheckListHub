{
  "id": 221,
  "header": "web-pentesting-checklist",
  "topicList": [
    "Pre-Engagement",
    "User management",
    "Input handling",
    "Application Logic",
    "Other checks"
  ],
  "itemGroups": [
    {
      "topic": "Pre-Engagement",
      "items": [
        {
          "topic": "Recon & analysis",
          "items": [
            {
              "title": "[ ] Identify web server &amp; technologies"
            },
            {
              "title": "[ ] <a href=\"https://medium.com/@_tas/subdomain-enumeration-try-hack-me-learnings-d9def486e5b\">Subdomains Enumeration</a>"
            },
            {
              "title": "[ ] <a href=\"../enumeration/web/crawl-fuzz.md\">Directory enumeration</a>"
            },
            {
              "title": "[ ] Find<a href=\"../recon/public-info-gathering.md\"> leaked ids, emails</a> (<a href=\"https://github.com/davidtavarez/pwndb\">pwndb</a>)"
            },
            {
              "title": "[ ] Identify WAF"
            },
            {
              "title": "[ ] Crawl all the site for interesting keywords like password, token, etc"
            },
            {
              "title": "[ ] Test for debug parameters"
            },
            {
              "title": "[ ] Identify data entry points"
            },
            {
              "title": "[ ] Try to locate /robots.txt /crossdomain.xml /clientaccesspolicy.xml /phpinfo.php /sitemap.xml"
            },
            {
              "title": "[ ] Review comments on source code"
            },
            {
              "title": "[ ] Check /.git"
            },
            {
              "title": "[ ] Shodan"
            },
            {
              "title": "[ ] Google dorking"
            },
            {
              "title": "[ ] Check waybackurls (<a href=\"https://github.com/lc/gau\">gau</a> and <a href=\"https://github.com/tomnomnom/waybackurls\">waybackurls</a>)"
            }
          ]
        },
        {
          "topic": "Network tests",
          "items": [
            {
              "title": "[ ] Check ICMP packets allowed"
            },
            {
              "title": "[ ] Check DMARC policies (<a href=\"https://github.com/BishopFox/spoofcheck\">spoofcheck</a>)"
            },
            {
              "title": "[ ] Look services on other ports than 80 and 443"
            },
            {
              "title": "[ ] Check UDP ports (<a href=\"https://github.com/CiscoCXSecurity/udp-proto-scanner\">udp-proto-scanner</a> or nmap)"
            },
            {
              "title": "[ ] Test SSL (<a href=\"https://github.com/drwetter/testssl.sh\">testssl</a>)"
            }
          ]
        },
        {
          "topic": "Preparation",
          "items": [
            {
              "title": "[ ] Study site structure"
            },
            {
              "title": "[ ] Make a list with all possible test cases"
            }
          ]
        }
      ]
    },
    {
      "topic": "User management",
      "items": [
        {
          "topic": "Registration",
          "items": [
            {
              "title": "[ ] Duplicate registration"
            },
            {
              "title": "[ ] Overwrite existing user (existing user takeover)"
            },
            {
              "title": "[ ] Username uniqueness"
            },
            {
              "title": "[ ] Weak password policy"
            },
            {
              "title": "[ ] Insufficient email verification process"
            },
            {
              "title": "[ ] Weak registration implementation or allows disposable email addresses"
            },
            {
              "title": "[ ] Fuzz after user creation to check if any folder have been overwritten or created with your profile name"
            },
            {
              "title": "[ ] Add only spaces in password"
            }
          ]
        },
        {
          "topic": "Authentication",
          "items": [
            {
              "title": "[ ] Username enumeration"
            },
            {
              "title": "[ ] Resilience to password guessing"
            },
            {
              "title": "[ ] Account recovery function"
            },
            {
              "title": "[ ] \"Remember me\" function"
            },
            {
              "title": "[ ] Impersonation function"
            },
            {
              "title": "[ ] Unsafe distribution of credentials"
            },
            {
              "title": "[ ] Fail-open conditions"
            },
            {
              "title": "[ ] Multi-stage mechanisms"
            },
            {
              "title": "[ ] <a href=\"../enumeration/web/sqli.md\">SQL Injections</a>"
            },
            {
              "title": "[ ] Auto-complete testing"
            },
            {
              "title": "[ ] Lack of password confirmation on change email, password or 2FA"
            },
            {
              "title": "[ ] Weak login function over HTTP and HTTPS if both are available"
            },
            {
              "title": "[ ] User account lockout mechanism on brute force attack"
            },
            {
              "title": "[ ] Check for password wordlist (<a href=\"https://github.com/digininja/CeWL\">cewl</a> and <a href=\"https://github.com/GainSec/GoldenNuggets-1\">burp-goldenNuggets</a>)"
            },
            {
              "title": "[ ] Test 0auth login functionality for <a href=\"../enumeration/web/ssrf.md\">Open Redirection</a>"
            },
            {
              "title": "[ ] Test response tampering in <a href=\"../enumeration/webservices/onelogin-saml-login.md\">SAML </a>authentication"
            },
            {
              "title": "[ ] In OTP check guessable codes and race conditions"
            },
            {
              "title": "[ ] If <a href=\"../enumeration/webservices/jwt.md\">JWT</a>, check common flaws"
            },
            {
              "title": "[ ] Browser cache weakness (eg Pragma, Expires, Max-age)"
            }
          ]
        },
        {
          "topic": "Session",
          "items": [
            {
              "title": "[ ] Session handling"
            },
            {
              "title": "[ ] Test tokens for meaning"
            },
            {
              "title": "[ ] Test tokens for predictability"
            },
            {
              "title": "[ ] Insecure transmission of tokens"
            },
            {
              "title": "[ ] Disclosure of tokens in logs"
            },
            {
              "title": "[ ] Mapping of tokens to sessions"
            },
            {
              "title": "[ ] Session termination"
            },
            {
              "title": "[ ] Session fixation"
            },
            {
              "title": "[ ] <a href=\"../enumeration/web/csrf.md\">Cross-site request forgery</a>"
            },
            {
              "title": "[ ] Cookie scope"
            },
            {
              "title": "[ ] Decode Cookie (Base64, hex, URL etc.)"
            },
            {
              "title": "[ ] Cookie expiration time"
            },
            {
              "title": "[ ] Check HTTPOnly and Secure flags"
            },
            {
              "title": "[ ] Use same cookie from a different effective IP address or system"
            },
            {
              "title": "[ ] Access controls"
            },
            {
              "title": "[ ] Effectiveness of controls using multiple accounts"
            },
            {
              "title": "[ ] Insecure access control methods (request parameters, Referer header, etc)"
            },
            {
              "title": "[ ] Check for concurrent login through different machine/IP"
            },
            {
              "title": "[ ] Bypass <a href=\"../enumeration/web/csrf.md#csrf-token-bypass\">AntiCSRF </a>tokens"
            }
          ]
        },
        {
          "topic": "Profile/Account details",
          "items": [
            {
              "title": "[ ] Find parameter with user id and try to tamper in order to get the details of other users"
            },
            {
              "title": "[ ] Create a list of features that are pertaining to a user account only and try CSRF"
            },
            {
              "title": "[ ] Change email id and update with any existing email id. Check if its getting validated on server or not."
            },
            {
              "title": "[ ] Check any new email confirmation link and what if user doesn't confirm."
            },
            {
              "title": "[ ] File <a href=\"../enumeration/web/upload-bypasses.md\">upload</a>: Unsafe File upload,  No Antivirus, No Size Limit, File extension, Filter Bypass, <a href=\"https://github.com/portswigger/upload-scanner\">burp</a>"
            },
            {
              "title": "[ ] CSV import/export: Command Injection, XSS, macro injection"
            },
            {
              "title": "[ ] Check profile picture URL and find email id/user info or EXIF Geolocation Data"
            },
            {
              "title": "[ ] Imagetragick in picture profile upload"
            },
            {
              "title": "[ ] <a href=\"https://github.com/exiftool/exiftool\">Metadata </a>of all downloadable files"
            },
            {
              "title": "[ ] Account deletion option and try to reactivate with \"Forgot password\" feature"
            },
            {
              "title": "[ ] Try bruteforce enumeration when change any user unique parameter."
            },
            {
              "title": "[ ] Check application request re-authentication for sensitive operations"
            },
            {
              "title": "[ ] Try parameter pollution to add two values of same field"
            }
          ]
        },
        {
          "topic": "Forgot password",
          "items": [
            {
              "title": "[ ] Invalidate session on Logout and Password reset"
            },
            {
              "title": "[ ] Uniqueness of forget password reset link/code"
            },
            {
              "title": "[ ] Reset links expiration time"
            },
            {
              "title": "[ ] Find user id or other sensitive fields in reset link and tamper them"
            },
            {
              "title": "[ ] Request 2 reset passwords links and use the older"
            },
            {
              "title": "[ ] Check if many requests have sequential tokens"
            }
          ]
        }
      ]
    },
    {
      "topic": "Input handling",
      "items": [
        {
          "title": "[ ] Fuzz all request parameters"
        },
        {
          "title": "[ ] Identify all reflected data"
        },
        {
          "title": "[ ] <a href=\"../enumeration/web/xss.md\">Reflected XSS</a>"
        },
        {
          "title": "[ ] HTTP<a href=\"../enumeration/web/header-injections.md\"> header injection</a> in GET &amp; POST (X Forwarded Host)"
        },
        {
          "title": "[ ] Arbitrary redirection"
        },
        {
          "title": "[ ] Stored attacks"
        },
        {
          "title": "[ ] OS command injection"
        },
        {
          "title": "[ ] Path <a href=\"../enumeration/web/lfi-rfi.md\">traversal</a>"
        },
        {
          "title": "[ ] Script injection"
        },
        {
          "title": "[ ] File inclusion"
        },
        {
          "title": "[ ] SMTP injection"
        },
        {
          "title": "[ ] Native software flaws (buffer overflow, integer bugs, format strings)"
        },
        {
          "title": "[ ] SOAP injection"
        },
        {
          "title": "[ ] LDAP injection"
        },
        {
          "title": "[ ] XPath injection"
        },
        {
          "title": "[ ] <a href=\"../enumeration/web/xxe.md\">XXE</a> in any request, change content-type to text/xml"
        },
        {
          "title": "[ ] Stored <a href=\"../enumeration/web/xss.md\">XSS</a>"
        },
        {
          "title": "[ ] <a href=\"../enumeration/web/sqli.md\">SQL </a>injection"
        },
        {
          "title": "[ ] <a href=\"../enumeration/webservices/nosql-and-and-mongodb.md\">NoSQL </a>injection"
        },
        {
          "title": "[ ] HTTP Request <a href=\"../enumeration/web/request-smuggling.md\">Smuggling</a>"
        },
        {
          "title": "[ ] <a href=\"../enumeration/web/ssrf.md\">Open redirect</a>"
        },
        {
          "title": "[ ] <a href=\"../enumeration/web/ssrf.md\">SSRF </a>in previously discovered open ports"
        },
        {
          "title": "[ ] xmlrpc.php DOS and user enumeration"
        },
        {
          "title": "[ ] HTTP dangerous methods OPTIONS PUT DELETE"
        },
        {
          "topic": "Error handling",
          "items": [
            {
              "title": "[ ] Access custom pages like /whatever_fake.php (.aspx,.html,.etc)"
            },
            {
              "title": "[ ] Add multiple parameters in GET and POST request using different values"
            },
            {
              "title": "[ ] Add \"[]\", \"]]\", and \"[[\" in cookie values and parameter values to create errors"
            },
            {
              "title": "[ ] Generate error by giving input as \"/~randomthing/%s\" at the end of URL"
            },
            {
              "title": "[ ] Use Burp Intruder \"Fuzzing Full\" List in input to generate error codes"
            },
            {
              "title": "[ ] Try different HTTP Verbs like PATCH, DEBUG or wrong like FAKE"
            }
          ]
        }
      ]
    },
    {
      "topic": "Application Logic",
      "items": [
        {
          "title": "[ ] Identify the logic attack surface"
        },
        {
          "title": "[ ] Test transmission of data via the client"
        },
        {
          "title": "[ ] Test for reliance on client-side input validation"
        },
        {
          "title": "[ ] Thick-client components (Java, ActiveX, Flash)"
        },
        {
          "title": "[ ] Multi-stage processes for logic flaws"
        },
        {
          "title": "[ ] Handling of incomplete input"
        },
        {
          "title": "[ ] Trust boundaries"
        },
        {
          "title": "[ ] Transaction logic"
        },
        {
          "title": "[ ] Implemented CAPTCHA in email forms to avoid flooding"
        },
        {
          "title": "[ ] Tamper product id, price or quantity value in any action (add, modify, delete, place, pay...)"
        },
        {
          "title": "[ ] Tamper gift or discount codes"
        },
        {
          "title": "[ ] Reuse gift codes"
        },
        {
          "title": "[ ] Try parameter pollution to use gift code two times in same request"
        },
        {
          "title": "[ ] Try stored XSS in non-limited fields like address"
        },
        {
          "title": "[ ] Check in payment form if CVV and card number is in clear text or masked"
        },
        {
          "title": "[ ] Check if is processed by the app itself or sent to 3rd parts"
        },
        {
          "title": "[ ] IDOR from other users details ticket/cart/shipment"
        },
        {
          "title": "[ ] Check PRINT or PDF creation for IDOR"
        },
        {
          "title": "[ ] Check unsubscribe button with user enumeration"
        },
        {
          "title": "[ ] Parameter pollution on social media sharing links"
        },
        {
          "title": "[ ] CORS (<a href=\"https://github.com/s0md3v/Corsy\">corsy</a>)"
        },
        {
          "title": "[ ] Change POST sensitive requests to GET"
        }
      ]
    },
    {
      "topic": "Other checks",
      "items": [
        {
          "topic": "Hosting",
          "items": [
            {
              "title": "[ ] Segregation in shared infrastructures"
            },
            {
              "title": "[ ] Segregation between ASP-hosted applications"
            },
            {
              "title": "[ ] Web server vulnerabilities"
            },
            {
              "title": "[ ] Dangerous HTTP methods"
            },
            {
              "title": "[ ] Proxy functionality"
            },
            {
              "title": "[ ] <a href=\"../enumeration/webservices/vhosts.md\">Virtual </a>hosting misconfiguration"
            },
            {
              "title": "[ ] Check for internal numeric IP's in request"
            },
            {
              "title": "[ ] Check for external numeric IP's and resolve it"
            },
            {
              "title": "[ ] References to <a href=\"../enumeration/cloud/cloud-info-recon.md\">cloud </a>assets"
            }
          ]
        },
        {
          "topic": "CAPTCHA",
          "items": [
            {
              "title": "[ ] Send old captcha value."
            },
            {
              "title": "[ ] Send old captcha value with old session ID."
            },
            {
              "title": "[ ] Request captcha absolute path like www.url.com/captcha/1.png"
            },
            {
              "title": "[ ] Remove captcha with any adblocker and request again"
            },
            {
              "title": "[ ] Bypass with OCR tool"
            }
          ]
        },
        {
          "topic": "Headers",
          "items": [
            {
              "title": "[ ] X-XSS-Protection"
            },
            {
              "title": "[ ] Strict-Transport-Security"
            },
            {
              "title": "[ ] Content-Security-Policy"
            },
            {
              "title": "[ ] Public-Key-Pins"
            },
            {
              "title": "[ ] X-Frame-Options"
            },
            {
              "title": "[ ] X-Content-Type-Options"
            },
            {
              "title": "[ ] Referer-Policy"
            },
            {
              "title": "[ ] Cache-Control"
            },
            {
              "title": "[ ] Expires"
            }
          ]
        }
      ]
    }
  ],
  "sourceUrl": "https://example.com"
}