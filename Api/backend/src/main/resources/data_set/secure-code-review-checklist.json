{
  "id": 182,
  "header": "secure-code-review-checklist",
  "topicList": [
    "TLDR;",
    "Input Validation",
    "Authentication and User Management",
    "Authorization",
    "Session Management",
    "Encryption & Cryptography",
    "Exception Handling",
    "Reducing the attack surface"
  ],
  "itemGroups": [
    {
      "topic": "TLDR;",
      "items": [
        {
          "title": " What security vulnerabilities is this code susceptible to?"
        },
        {
          "title": " Are authorization and authentication handled in the right way?"
        },
        {
          "title": " Is (user) input validated, sanitized, and escaped to prevent cross-site scripting, or SQL injection?"
        },
        {
          "title": " Is sensitive data like user data, or credit card information securely handled and stored?"
        },
        {
          "title": " Does this code NOT reveal some secret information like keys, passwords, or usernames?"
        },
        {
          "title": " Is data retrieved from external APIs or libraries checked accordingly?"
        },
        {
          "title": " Does error handling or logging NOT expose the system to vulnerabilities?"
        },
        {
          "title": " Is the right encryption used?"
        }
      ]
    },
    {
      "topic": "Input Validation",
      "items": [
        {
          "title": " Are inputs from external sources validated?"
        },
        {
          "title": " Is user input tested for type, length, format, and range, and by enforcing limits?"
        },
        {
          "title": " Are flaws in regular expressions causing data validation problems?"
        },
        {
          "title": " Are exact match approaches used?"
        },
        {
          "title": " Are allow list approaches used (i.e., check strings for only expected values)?"
        },
        {
          "title": " Are block list approaches used (i.e., rejected stings for inappropriate values)?"
        },
        {
          "title": " Are XML documents validated against their schemas?"
        },
        {
          "title": " Are string concatenations NOT used for user input?"
        },
        {
          "title": " Are SQL statements NOT dynamically created by using user input?"
        },
        {
          "title": " Is data validated on the server side?"
        },
        {
          "title": " Is there a strong separation between data and commands, and data and client-side scripts?"
        },
        {
          "title": " Is contextual escaping used when passing data to SQL, LDAP, OS and third-party commands?"
        },
        {
          "title": " Are https headers validated for each request?"
        }
      ]
    },
    {
      "topic": "Authentication and User Management",
      "items": [
        {
          "title": " Are sessions handled correctly?"
        },
        {
          "title": " Do failure messages for invalid usernames or passwords NOT leak information?"
        },
        {
          "title": " Are invalid passwords NOT logged (which can leak sensitive password &amp; user name combinations)?"
        },
        {
          "title": " Are the password requirements (lengths/complexity) appropriate?"
        },
        {
          "title": " Are invalid login attempts correctly handled with lockouts, and rate limits?"
        },
        {
          "title": " Does the \"forgot password\" routine NOT leak information, and is NOT vulnerable to spamming?"
        },
        {
          "title": " Are passwords NOT sent in plain text via email?"
        },
        {
          "title": " Are appropriate mechanisms such as hashing, salts, and encryption used for storing passwords and usernames?"
        }
      ]
    },
    {
      "topic": "Authorization",
      "items": [
        {
          "title": " Are authentication and authorization the first logic executed for each request?"
        },
        {
          "title": " Are authorization checks granular (page and directory level)?"
        },
        {
          "title": " Is access to pages and data denied by default?"
        },
        {
          "title": " Is re-authenticate for requests that have side effects enforced?"
        },
        {
          "title": " Are there clear roles for authorization?"
        },
        {
          "title": " Can authorization NOT be circumvented by parameter or cookie manipulation?"
        }
      ]
    },
    {
      "topic": "Session Management",
      "items": [
        {
          "title": " Are session parameters NOT passed in URLs?"
        },
        {
          "title": " Do session cookies expire in a reasonably short time?"
        },
        {
          "title": " Are session cookies encrypted?"
        },
        {
          "title": " Is session data being validated?"
        },
        {
          "title": " Is private data in cookies kept to a minimum?"
        },
        {
          "title": " Does the application avoid excessive cookie use?"
        },
        {
          "title": " Is the session id complex?"
        },
        {
          "title": " Is the session storage secure?"
        },
        {
          "title": " Does the application properly handle invalid session ids?"
        },
        {
          "title": " Are session limits e.g., inactivity timeouts, enforced?"
        },
        {
          "title": " Are logouts invalidating the session?"
        },
        {
          "title": " Are session resources released when sessions are invalidated?"
        }
      ]
    },
    {
      "topic": "Encryption & Cryptography",
      "items": [
        {
          "title": " Are state-of-the-art encryption algorithms used (such as FIPS-140)?"
        },
        {
          "title": " Are minimum key sizes supported?"
        },
        {
          "title": " What types of data must be encrypted?"
        },
        {
          "title": " Has sensitive data been secured in memory, storage and transit?"
        },
        {
          "title": " Do restricted areas require SSL?"
        },
        {
          "title": " Is sensitive information passed to/from non-SSL pages?"
        }
      ]
    },
    {
      "topic": "Exception Handling",
      "items": [
        {
          "title": " Do all methods have appropriate exceptions?"
        },
        {
          "title": " Do error messages shown to users NOT reveal sensitive information including stack traces, or ids?"
        },
        {
          "title": " Does the application fail securely when exceptions occur?"
        },
        {
          "title": " Are system errors NOT shown to users?"
        },
        {
          "title": " Are resources released and transactions rolled back when there is an error?"
        },
        {
          "title": " Are all user or system actions are logged?"
        },
        {
          "title": " Do we make sure that sensitive information is NOT logged (e.g. passwords)?"
        },
        {
          "title": " Do we make sure we have logs or all important user management events (e.g. password reset)?"
        },
        {
          "title": " Are unusual activities such as multiple login attempts logged?"
        },
        {
          "title": " Do logs have enough detail to reconstruct events for audit purposes?"
        }
      ]
    },
    {
      "topic": "Reducing the attack surface",
      "items": [
        {
          "title": " Are there any alarms or monitoring to spot if they are accessing sensitive data that they shouldn’t be? This could\napply to all types of users, not only administrators"
        },
        {
          "title": " Is the function going to be available to non-authenticated users? If no authentication is necessary for the function\nto be invoked, then the risk of attackers using the interface is increased. Does the function invoke a backend task that\ncould be used to deny services to other legitimate users? E.g. if the function writes to a file, \nor sends an SMS, or causes a CPU intensive calculation, could an attacker write a\nscript to call the function many times per second and prevent legitimate users access to that task?"
        },
        {
          "title": " Are searches controlled? Search is a risky operation as it typically queries the database for some criteria and returns\nthe results, if attacker can inject SQL into query then they could access more data than intended."
        },
        {
          "title": " Is important data stored separately from trivial data (in DB, file storage, etc). Is the change going to allow unauthenticated\nusers to search for publicly available store locations in a database table in the same partition as the username/\npassword table? Should this store location data be put into a different database, or different partition, to reduce the\nrisk to the database information?"
        },
        {
          "title": " If file uploads are allowed, are they be authenticated? Is there rate limiting? Is there a maximum file size for each\nupload or aggregate for each user? Does the application restrict the file uploads to certain types of file (by checking\nMIME data or file suffix). Is the application is going to run virus checking?"
        },
        {
          "title": " If you have administration users with high privilege, are their actions logged/tracked in such a way that they a) can’t\nerase/modify the log and b) can’t deny their actions?"
        },
        {
          "title": " Are there any alarms or monitoring to spot if they are accessing sensitive data that they shouldn’t be? This could\napply to all types of users, not only administrators."
        },
        {
          "title": " Will changes be compatible with existing countermeasures, or security code, or will new code/countermeasures\nneed to be developed?"
        },
        {
          "title": " Is the change attempting to introduce some non-centralized security code module, instead of re-using or extending \nan existing security module?"
        },
        {
          "title": " Is the change adding unnecessary user levels or entitlements that will complicate the attack surface."
        },
        {
          "title": " If the change is storing PII or confidential data, is all of the new information absolutely necessary? There is little value\nin increasing the risk to an application by storing the social security numbers of millions of people, if the data is never\nused."
        },
        {
          "title": " Does application configuration cause the attack surface to vary greatly depending on configuration settings, and is\nthat configuration simple to use and alert the administrator when the attack surface is being expanded?"
        },
        {
          "title": " Could the change be done in a different way that would reduce the attack surface, i.e. instead of making help items\nsearchable and storing help item text in a database table beside the main username/password store, providing static\nhelp text on HTML pages reduces the risk through the ‘help’ interface."
        },
        {
          "title": " Is information stored on the client that should be stored on the server?<p>For more insights into code reviews go to <a href=\"https://www.awesomecodereviews.com/\">awesomecodereviews.com</a>.</p>"
        }
      ]
    }
  ]
}