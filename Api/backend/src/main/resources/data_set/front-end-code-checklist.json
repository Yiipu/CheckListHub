{
  "id": 85,
  "header": "front-end-code-checklist",
  "topicList": [
    "是什么？为什么？",
    "前端",
    "代码质量",
    "注释",
    "测试",
    "故障处理",
    "贡献"
  ],
  "itemGroups": [
    {
      "topic": "是什么？为什么？",
      "items": [
        {
          "title": "<p>前端代码审查清单是一个保证前端代码质量的审查清单。当我们在开发写代码的时候，总会各种各样的问题，自测的时候由于太熟悉自己的代码逻辑往往测试不够充分，无法发现问题。</p><p>前端代码审查清单就是为了解决这个问题！清单存放了一些常见的问题，当我们开发完成之后，对照清单思考一下这些问题在代码中是否遇到或者妥善处理，从而提高代码质量。</p>"
        }
      ]
    },
    {
      "topic": "前端",
      "items": [
        {
          "topic": "前端安全",
          "items": [
            {
              "title": " 所有的用户可以在页面中输入信息的地方，是否做了防 XSS 以及特殊字符的过滤处理？"
            },
            {
              "title": " 与后端接口交互，获取信息使用 GET 方式，传送信息使用 POST 方式。后端接口应对各项参数做校验。前端也要判断接口是否返回合法、正确。"
            },
            {
              "title": " 开发与 DOM 操作有关的代码时，是否对 DOM 不存在或者被人为修改的情况做处理？"
            },
            {
              "title": " 获取数据和信息时，是否对类型做过处理和转换并设置为空时的默认值？比如：var num = parseInt(Str);"
            },
            {
              "title": " 在所有会发生错误的地方，是否编写了错误处理逻辑？比如：阻止继续执行、显示错误信息、记录错误日志和信息等。"
            },
            {
              "title": " 代码里获取 window.location 相关属性的地方，是否对里面的 XSS 字符做了过滤处理？"
            }
          ]
        },
        {
          "topic": "前端性能",
          "items": [
            {
              "title": " JS 代码是否尽量放在底部？CSS 代码是否尽量放在了顶部？"
            },
            {
              "title": " 是否部署 CDN 或者开启了缓存功能？"
            },
            {
              "title": " 上线或者发布前，是否对静态资源进行打包、压缩处理？"
            },
            {
              "title": " 正确使用预加载、懒加载等技术手段提高性能。"
            },
            {
              "title": " 是否对图片等资源进行压缩以及 CSS Sprite 处理？"
            }
          ]
        }
      ]
    },
    {
      "topic": "代码质量",
      "items": [
        {
          "title": " 你的代码是否遵循团队要求的代码规范？"
        },
        {
          "title": " 是否有冗余代码没有注释掉或者删掉？例如：删除或者注释 console.log 避免低端 IE 报错等。"
        },
        {
          "title": " 关键功能是否还有优化的空间？"
        },
        {
          "title": " 代码是否简单易懂，逻辑清晰，模块化？"
        },
        {
          "title": " 变量名是否简单易懂？是否拼写正确？"
        },
        {
          "title": " CSS 属性是否有拼写错误？"
        },
        {
          "title": " HTML 标签是否书写正确，是否嵌套正确？"
        },
        {
          "title": " JS 代码是否经过 JSLint 或者 ESLint 等工具校验？"
        },
        {
          "title": " 是否将核心功能尽可能独立，从而避免其他功能出现问题影响到核心功能？"
        }
      ]
    },
    {
      "topic": "注释",
      "items": [
        {
          "title": " 是否在重要功能附近添加合适的注释？"
        },
        {
          "title": " 注释是否包含了开发人员信息、开发时间、开发者联系方式以及相关功能说明？"
        },
        {
          "title": " 换位思考，你能根据你的注释推断出下面代码的功能吗？"
        },
        {
          "title": " 代码里是否还存在 TODO ？是否可以删掉或者完善功能？"
        },
        {
          "title": " 可能产生意外情况的地方是否留下说明？"
        }
      ]
    },
    {
      "topic": "测试",
      "items": [
        {
          "title": " 代码逻辑是否正确、可用、符合需求？"
        },
        {
          "title": " 在进行各种操作的时候，是否有报错出现？"
        },
        {
          "title": " 是否有资源加载出错或者失败？"
        },
        {
          "title": " 是否按照项目要求，使用相关设备以及浏览器进行测试和体验？"
        },
        {
          "title": " 是否对边界条件以及看起来比较极端的情况做过测试？"
        }
      ]
    },
    {
      "topic": "故障处理",
      "items": [
        {
          "title": " 是否考虑过如果发生线上故障，如何做回滚处理？处理什么文件？"
        },
        {
          "title": " 功能与功能之间是否足够独立？是否设置开关？当某个功能发生故障是否可以通过开关关掉？"
        }
      ]
    },
    {
      "topic": "贡献",
      "items": [
        {
          "title": "<p>由于本人才疏学浅，部分场景没有覆盖，欢迎大家补充更多审查点，提高前端代码质量！</p>"
        }
      ]
    }
  ]
}