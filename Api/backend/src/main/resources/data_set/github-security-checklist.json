{
  "id": 97,
  "header": "github-security-checklist",
  "topicList": [
    "Individual settings",
    "Organization settings",
    "About this doc"
  ],
  "itemGroups": [
    {
      "topic": "Individual settings",
      "items": [
        {
          "title": "[ ] <strong>Set a strong password</strong>: Set a strong, random password generated by a password manager. A good benchmark to hit is 20 characters of mixed case letters and numbers.<br/>Personal settings → Account → <a href=\"https://github.com/settings/admin\">Change password</a>"
        },
        {
          "title": "[ ] <strong>Enable 2FA</strong>: Turn on 2FA. The strongest form of 2FA is a hardware-based U2F security key.<br/>Personal settings → Security → <a href=\"https://github.com/settings/two_factor_authentication/configure\">Two-factor authentication</a>"
        },
        {
          "title": "[ ] <strong>Back up your 2FA Recovery codes</strong>: You should put your recovery codes in a safe place or else you may get locked out of your GitHub account permanently.<br/>Personal settings → Security → <a href=\"https://github.com/settings/two_factor_authentication/configure\">Two-factor authentication</a>"
        },
        {
          "title": "[ ] <strong>Enable Vulnerability Alerts</strong><br/>Personal settings → Notifications → <a href=\"https://github.com/settings/notifications\">Vulnerability alerts</a> (check both \"Email\" and \"Web\")"
        },
        {
          "title": "[ ] <strong>Audit SSH keys regularly</strong>: SSH keys are an alternative to username/password authentication to your GitHub account. An attacker with temporary access to your account could add an SSH key to your account as a backdoor. You should check the list of keys on your account at least monthly and review the last time they were used. Revoke any not in regular use.<br/>Personal settings → <a href=\"https://github.com/settings/keys\">SSH and GPG keys</a>"
        },
        {
          "title": "[ ] <strong>Securely store your SSH keys</strong>: You should only store your GitHub-related SSH keys on computers you consider reasonably secure. Avoid reusing SSH keys for both GitHub authentication and other purposes. Each SSH key should be secured with a strong password. You should regularly review the SSH keys listed on your account and revoke them if they are not in regular use. An attacker who compromises one of your listed SSH keys can access your GitHub account without further authentication secrets.<br/>Personal settings → <a href=\"https://github.com/settings/keys\">SSH and GPG keys</a>"
        },
        {
          "title": "[ ] <strong>Add a dedicated GPG key for signing commits</strong>: All users should have a GPG key to cryptographically sign commits. Keys should be stored securely.<br/><br/>References:<br/><a href=\"https://help.github.com/articles/adding-a-new-gpg-key-to-your-github-account/\">Adding a new key to your GitHub account</a><br/><a href=\"https://github.com/lfit/itpol/blob/master/protecting-code-integrity.md\">Advanced guide</a><br/><br/>Personal settings → <a href=\"https://github.com/settings/keys\">SSH and GPG keys</a>"
        },
        {
          "title": "[ ] <strong>Do not set a Fallback SMS number</strong>: Most SMS providers are prone to number porting attacks.<br/>Personal settings → Security → <a href=\"https://github.com/settings/two_factor_authentication/configure\">Two-factor authentication</a>"
        },
        {
          "title": "[ ] <strong>Only install OAuth apps you trust</strong>: Only install OAuth apps which you trust for the minimum amount of time you need them. Remove apps no longer in use. You should review their permissions to make sure they are appropriate; OAuth apps can Read or Write account data including commit status, deployments, gists, webhooks, notifications, etc. A full list of the kinds of data that can be accessed is available <a href=\"https://help.github.com/articles/authorizing-oauth-apps/\">here</a>. Rogue apps can exfiltrate inappropriate data and modify account data. Note: Many apps only need to identify your GitHub account, and thus require merely read-only access to your email address. <a href=\"https://developer.github.com/apps/differences-between-apps/\">More documentation</a><br/>Personal settings → Applications → <a href=\"https://github.com/settings/applications\">Authorized OAuth Apps</a>"
        },
        {
          "title": "[ ] <em>Utilize a secure email provider for their primary email address</em>: Your primary email address can be part of an account recovery/reset process, and so it’s important this address is secure. Email providers such as GMail and ProtonMail provided secure service with 2FA options. A personal account with Enhanced Protection set up for GMail is best; consider creating a GMail account for this dedicated purpose, e.g. myname-github@gmail.com<br/>Personal settings → <a href=\"https://github.com/settings/emails\">Emails</a>"
        },
        {
          "title": "[ ] <em>Make email addresses private</em>: It is recommended you set all email addresses for better protection against social engineering.<br/>Personal settings → <a href=\"https://github.com/settings/emails\">Emails</a>"
        },
        {
          "title": "[ ] <em>Allow exposing email via command line</em>: Although it  would be desirable to avoid disclosing your email via command line commands for better protection against social engineering, you won’t be able to publish changes to public repos without this allowed.<br/>Personal settings → <a href=\"https://github.com/settings/emails\">Emails</a>"
        }
      ]
    },
    {
      "topic": "Organization settings",
      "items": [
        {
          "title": "[ ] <strong>Organization admins must restrict Third-party application access</strong>: Without this setting, all applications authorized by organization members have access to the organization’s data, potentially allowing rogue applications access to organization data such as private repos.<br/>Organization settings → Third-party application access"
        },
        {
          "title": "[ ] <strong>Organization admins must require 2FA for members</strong><br/>Organization settings → Security → Two-factor authentication"
        },
        {
          "title": "[ ] <strong>Restrict membership to least-privilege</strong>: Membership in the organization is organized by teams. Team members of projects are given the least privileges to specific repositories that they require. Write access to repositories should be restricted where possible.<br/>People / Team settings"
        },
        {
          "title": "[ ] <strong>Organization admins must remove unwanted users</strong>: Admins should regularly audit membership lists to make sure permissions are appropriate, and unwanted members are removed. Timely revocation of access to the organization should be part of the organization’s exit process for contributors.<br/>People / Team settings"
        },
        {
          "title": "[ ] <em>Organization admins should restrict default member privileges</em>: Admins can set member privileges to create, delete, fork, and modify organization repositories; these privileges should be restricted to administrators. The default repository permission for users should be set to “None.”<br/>Organization settings → Member privileges"
        },
        {
          "title": "[ ] <em>Organization admins should audit webhooks</em>: Admins should review the list of organization webhooks for suspicious signs of exfiltration.<br/>Organization settings → Webhooks"
        }
      ]
    },
    {
      "topic": "About this doc",
      "items": [
        {
          "title": "<p>Securing your GitHub account helps keep users of your repositories safe, as well as protecting any GitHub organizations you belong to.</p><p>Please provide feedback! https://github.com/kristovatlas/github-security-checklist/issues</p>"
        }
      ]
    }
  ],
  "sourceUrl": "https://example.com"
}